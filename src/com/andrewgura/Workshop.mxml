<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         creationComplete="onCreationComplete(event)"
         resize="onResize(event)"
         styleName="editor">

    <fx:Script><![CDATA[
        import com.andrewgura.consts.AppMenuConsts;
        import com.andrewgura.controllers.AppMenuController;
        import com.andrewgura.controllers.MainController;
        import com.andrewgura.models.MainModel;
        import com.andrewgura.models.WorkshopConfig;
        import com.andrewgura.ui.components.Editor;
        import com.andrewgura.ui.popup.PopupFactory;

        import mx.core.FlexGlobals;

        import mx.events.FlexEvent;
        import mx.events.MenuEvent;
        import mx.events.ResizeEvent;

        import spark.components.Application;
        import spark.components.WindowedApplication;

        [Bindable]
        private var mainModel:MainModel = new MainModel();

        [Bindable]
        public var config:WorkshopConfig;

        [Bindable]
        public var editor:Editor;

        private function onCreationComplete(event:FlexEvent):void {
            mainModel.config = config;
            editor = new mainModel.config.editorClass();
            editor.includeInLayout = false;
            editor.width = editorHolder.width - 10;
            editor.height = editorHolder.height - 10;
            editor.x = 5;
            editor.y = 5;
            editorHolder.addElement(editor);
            MainController.initApplication(mainModel);
            FlexGlobals.topLevelApplication.showStatusBar = false;
            FlexGlobals.topLevelApplication.addEventListener(InvokeEvent.INVOKE, onAppInvoke);
        }

        private function onAppInvoke(event:InvokeEvent):void {
            if (event.arguments.length>0) {
                var fileName:String=event.arguments[0];
                MainController.openFileByName(fileName);
            }
        }

        private function onMenuItemClick(event:MenuEvent):void {
            AppMenuController.doMenuItemAction(event.item);
        }

        protected function onResize(event:ResizeEvent):void {
            PopupFactory.instance.centerAllPopups();
        }
        ]]>
  </fx:Script>

    <fx:Binding source="mainModel.currentProject" destination="editor.project"/>
    <fx:Binding source="editorHolder.width-10" destination="editor.width"/>
    <fx:Binding source="editorHolder.height-10" destination="editor.height"/>

    <s:VGroup width="100%" height="100%" gap="0">
        <mx:MenuBar id="menuBar" width="100%" height="24" top="0"
                    dataProvider="{mainModel.menuDataProvider}" showRoot="false" labelField="label"
                    styleName="breezeMenuBar" menuStyleName="breezeMenu"
                    itemClick="onMenuItemClick(event)"/>

        <s:TabBar dataProvider="{mainModel.openedProjects}" labelField="name"
                  selectedIndex="@{mainModel.currentProjectIndex}"
                  visible="{mainModel.openedProjects.length>1}" includeInLayout="{mainModel.openedProjects.length>1}"/>

        <s:Group id="editorHolder"
                 width="100%" height="100%"/>

    </s:VGroup>

</s:Group>
